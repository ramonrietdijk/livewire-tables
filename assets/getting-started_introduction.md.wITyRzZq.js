import{_ as t,c as i,o,ag as a}from"./chunks/framework.PaCWpUtO.js";const p=JSON.parse('{"title":"Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"getting-started/introduction.md","filePath":"getting-started/introduction.md"}'),l={name:"getting-started/introduction.md"};function r(s,e,n,c,d,u){return o(),i("div",null,e[0]||(e[0]=[a('<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h1><p>This package is built using the TALL stack to easily create dynamic tables for your models. It has been created with <strong>simplicity</strong> and <strong>efficiency</strong> in mind while still being able to extend it to your needs. Because of this simplicity, you will get Livewire Tables up and running in no time.</p><p>An easy way to customize the tables look and feel is also a very important aspect for this package. By publishing and customizing the views, Livewire Tables should always blend into the style of your project.</p><p>The way the table is built up has been inspired by Laravel Nova as it is simple yet powerful.</p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><p>These are some of the highlights which you will get out of the box:</p><ul><li>Selection of the columns you wish to see</li><li>Apply multiple filters at the same time</li><li>Perform actions on the selected records</li><li>Reorder the records in the table</li><li>Export records from the table</li><li>Works perfectly with the <code>SoftDeletes</code> trait</li><li>Search columns individually</li><li>Multiple column types supported</li><li>Dark mode support</li><li>100% code coverage</li></ul>',7)]))}const m=t(l,[["render",r]]);export{p as __pageData,m as default};
