import{_ as a,c as i,o as e,ag as t}from"./chunks/framework.PaCWpUtO.js";const c=JSON.parse('{"title":"Relations","description":"","frontmatter":{},"headers":[],"relativePath":"advanced/relations.md","filePath":"advanced/relations.md"}'),l={name:"advanced/relations.md"};function n(h,s,o,p,r,k){return e(),i("div",null,s[0]||(s[0]=[t(`<h1 id="relations" tabindex="-1">Relations <a class="header-anchor" href="#relations" aria-label="Permalink to &quot;Relations&quot;">​</a></h1><p>Relations are supported by both columns and filters. They allow easy access to related models to display or filter data.</p><p>The Livewire Table will search through every column and filter to see if a relation is defined. If so, it will automatically eager load the (nested) relation. The value that is displayed in the table is resolved via the models themselves, not with a seperate selection.</p><p>This approach is used because of 2 reasons:</p><ol><li>There is no need to individually select any columns except for the main table.</li><li>Defined accessors and casts in Laravel are respected when displaying the value.</li></ol><h2 id="relation-types" tabindex="-1">Relation Types <a class="header-anchor" href="#relation-types" aria-label="Permalink to &quot;Relation Types&quot;">​</a></h2><p>All eloquent relations should work out of the box and can be used in the table.</p><p>A <code>BelongsTo</code> relationship is automatically left joined to the table. As these relationships have a cardinality of one or zero, it will not show duplicate records or require a group by statement. By doing so, columns that are referencing this relationship can automatically be sorted by if you enable <a href="/livewire-tables/usage/columns.html#sortable">sorting</a> for these columns.</p><p>All relations will query the data based on <a href="https://laravel.com/docs/master/eloquent-relationships#querying-relationship-existence" target="_blank" rel="noreferrer">the existence</a> of the relationship. This way, all types of eloquent relations can be used.</p><p>As a <code>BelongsTo</code> relationship has already been joined by the table, it can be more performant to add <code>qualifyUsingAlias()</code> to any <code>BelongsTo</code> columns. This will internally add a <code>where</code> clause to the joined table instead of a subquery as described above.</p><p>Displaying data from a x-to-many relationship is also possible. If a column of <code>tags.name</code> is referenced, the Livewire Table will get the <code>name</code> of all associated <code>tags</code>. These values will then be joined by a comma.</p><p>Note that for very specific use cases you can always make use of <a href="/livewire-tables/usage/columns.html#computed">computed</a> columns.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><p>For columns:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Column</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Company&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;author.company.name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">qualifyUsingAlias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sortable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">searchable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Column</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Tags&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tags.name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">searchable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span></code></pre></div><p>For filters:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BooleanFilter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Active Author&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;author.active&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">qualifyUsingAlias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SelectFilter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Tags&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tags.id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        Tag</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pluck</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ),</span></span></code></pre></div><h2 id="behind-the-scenes" tabindex="-1">Behind The Scenes <a class="header-anchor" href="#behind-the-scenes" aria-label="Permalink to &quot;Behind The Scenes&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>This currently only applies to a <code>BelongsTo</code> relationship.</p></div><p>In order to automatically make sorting available on relationships, the tables of the related models are required. Tables from a <code>BelongsTo</code> relationship are automatically left joined to the dataset. Because some relations may refer to the same table, they are automatically aliased including the name of the relation. A blog could have an &quot;author&quot; and &quot;editor&quot; which reference the same &quot;users&quot; table.</p><p><strong>Example:</strong></p><p>Column <code>author.company.name</code> has the relations <code>author</code> and <code>company</code> and the column of <code>name</code>. This example will create 2 aliases:</p><ol><li><code>author</code> for the <code>users</code> table</li><li><code>author_company</code> for the <code>companies</code> table, joined on <code>users</code></li></ol><p>The column that will be used to sort on will be <code>author_company.name</code>.</p>`,24)]))}const y=a(l,[["render",n]]);export{c as __pageData,y as default};
